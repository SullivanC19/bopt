/* Generated by Cython 0.29.23 */

#ifndef __PYX_HAVE__error_function
#define __PYX_HAVE__error_function

#include "Python.h"

#ifndef __PYX_HAVE_API__error_function

#ifndef __PYX_EXTERN_C
  #ifdef __cplusplus
    #define __PYX_EXTERN_C extern "C"
  #else
    #define __PYX_EXTERN_C extern
  #endif
#endif

#ifndef DL_IMPORT
  #define DL_IMPORT(_T) _T
#endif

__PYX_EXTERN_C PyObject *wrap_array(RCover *, bool);
__PYX_EXTERN_C std::vector<float>  call_python_tid_error_class_function(PyObject *, RCover *);
__PYX_EXTERN_C std::vector<float>  call_python_support_error_class_function(PyObject *, RCover *);
__PYX_EXTERN_C float call_python_tid_error_function(PyObject *, RCover *);

#endif /* !__PYX_HAVE_API__error_function */

/* WARNING: the interface of the module init function changed in CPython 3.5. */
/* It now returns a PyModuleDef instance instead of a PyModule instance. */

#if PY_MAJOR_VERSION < 3
PyMODINIT_FUNC initerror_function(void);
#else
PyMODINIT_FUNC PyInit_error_function(void);
#endif

#endif /* !__PYX_HAVE__error_function */
